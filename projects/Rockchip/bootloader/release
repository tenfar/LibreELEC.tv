################################################################################
#      This file is part of LibreELEC - https://libreelec.tv
#      Copyright (C) 2017-present Team LibreELEC
#
#  LibreELEC is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  LibreELEC is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with LibreELEC.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

mkdir -p $RELEASE_DIR/3rdparty/bootloader
  if [ -n "$UBOOT_SYSTEM" ]; then
    BOOTLOADER_DIR=$(get_build_dir $BOOTLOADER)
    if [ -f $BOOTLOADER_DIR/idbloader.img ]; then
      cp -a $BOOTLOADER_DIR/idbloader.img $RELEASE_DIR/3rdparty/bootloader
    fi
    if [ -f $BOOTLOADER_DIR/uboot.img ]; then
      cp -a $BOOTLOADER_DIR/uboot.img $RELEASE_DIR/3rdparty/bootloader
    fi
    if [ -f $BOOTLOADER_DIR/trust.img ]; then
      cp -a $BOOTLOADER_DIR/trust.img $RELEASE_DIR/3rdparty/bootloader
    fi
  fi

  LINUX_DTS_DIR=$(get_build_dir linux)/arch/$TARGET_KERNEL_ARCH/boot/dts
  for dtb in $LINUX_DTS_DIR/*.dtb $LINUX_DTS_DIR/*/*.dtb; do
    if [ -f $dtb ]; then
      cp -a $dtb $RELEASE_DIR/3rdparty/bootloader
    fi
  done
LINUX_FILE=$(get_build_dir linux)/arch/$TARGET_KERNEL_ARCH/Image
        BOOT=rkimage/system.img
	rm -rf ${BOOT}

	echo -e "\e[36m Generate System image start\e[0m"

	# 512 Mb
	mkfs.vfat -n "system" -S 512 -C ${BOOT} $((512 * 1024))

	mmd -i ${BOOT} ::/extlinux
	mcopy -i ${BOOT} -s $PROJECT_DIR/$PROJECT/devices/$DEVICE/bootloader/rk3399.conf ::/extlinux/extlinux.conf
	mcopy -i ${BOOT} -s $TARGET_IMG/$IMAGE_NAME.kernel ::/KERNEL
        mcopy -i ${BOOT} -s $TARGET_IMG/$IMAGE_NAME.system ::/SYSTEM
        
  for dtb in $LINUX_DTS_DIR/*.dtb $LINUX_DTS_DIR/*/*.dtb; do
    if [ -f $dtb ]; then
      mcopy -i ${BOOT} -s $dtb ::
    fi
  done
	echo -e "\e[36m Generate rootfs image : ${BOOT} success! \e[0m"


        BOOT2=rkimage/boot.img
	rm -rf ${BOOT2}

	echo -e "\e[36m Generate Boot image start\e[0m"

	# 100 Mb
	mkfs.vfat -n "boot" -S 512 -C ${BOOT2} $((100 * 1024))

	mmd -i ${BOOT2} ::/extlinux
	mcopy -i ${BOOT2} -s $PROJECT_DIR/$PROJECT/devices/$DEVICE/bootloader/rk3399.conf ::/extlinux/extlinux.conf
	mcopy -i ${BOOT2} -s $TARGET_IMG/$IMAGE_NAME.kernel ::/KERNEL
        #mcopy -i ${BOOT2} -s $TARGET_IMG/$IMAGE_NAME.system ::/SYSTEM
        
  for dtb in $LINUX_DTS_DIR/*.dtb $LINUX_DTS_DIR/*/*.dtb; do
    if [ -f $dtb ]; then
      mcopy -i ${BOOT2} -s $dtb ::
    fi
  done
	echo -e "\e[36m Generate Boot image : ${BOOT2} success! \e[0m"
